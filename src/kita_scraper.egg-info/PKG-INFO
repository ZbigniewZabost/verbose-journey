Metadata-Version: 2.4
Name: kita-scraper
Version: 1.0.0
Summary: A tool to scrape pictures from your kita site and save them locally
Home-page: https://github.com/zbigniewzabost/verbose-journey
Author: Zbigniew Zabost
Author-email: zabostz@gmail.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: selenium
Requires-Dist: webdriver-manager
Requires-Dist: python-dateutil
Requires-Dist: Pillow
Requires-Dist: piexif
Requires-Dist: pathvalidate
Requires-Dist: pytest
Requires-Dist: pytest-cov
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Get pictures from kita page

This tool helps to scrap pictures from your kita site and save locally so that they can be backed up.

## Using with Devbox

[Devbox](https://www.jetpack.io/devbox/) provides an isolated, reproducible development environment for this project.

### Setup

1. [Install Devbox](https://www.jetpack.io/devbox/docs/installing_devbox/)
2. Clone this repository and navigate to the project directory
3. Initialize the devbox environment:
   ```shell
   devbox shell
   ```
   This will:
   - Install all required dependencies (Python, Firefox, GeckoDriver)
   - Create a Python virtual environment (.venv)
   - Install required Python packages into the virtual environment
   - Create the data directory if it doesn't exist

4. Copy the example environment file and update it with your credentials:
   ```shell
   cp .env.example .env
   # Edit .env with your actual values
   ```

5. Run the script:
   ```shell
   devbox run test
   ```
   This will automatically load your environment variables from the .env file and run the script.

Downloaded files will be saved to the `./data` directory.

### Using Containers with Devbox

You can also build and run containers using devbox with either Docker or Podman:

#### Generic Container Commands (Auto-detects Docker or Podman)

1. Build the container image:
   ```shell
   devbox run container-build
   ```

2. Run the container:
   ```shell
   devbox run container-run
   ```

These commands will automatically use Podman if available, otherwise they'll fall back to Docker.

#### Docker-specific Commands

1. Build the Docker image:
   ```shell
   devbox run docker-build
   ```

2. Run the Docker container:
   ```shell
   devbox run docker-run
   ```

#### Podman-specific Commands

1. Build the Podman image:
   ```shell
   devbox run podman-build
   ```

2. Run the Podman container:
   ```shell
   devbox run podman-run
   ```

All container commands will use environment variables from your shell (if set) or fall back to defaults.

## Using with Docker or Podman

### Docker

```shell
# First, ensure the data directory exists and has proper permissions
mkdir -p /home/path/where/i/want/pics/to/be
chmod 777 /home/path/where/i/want/pics/to/be

# Then run the container
docker run --rm -t --name verbose-journey \
-e EMAIL="example-my_paiiigeeee_login@email.com" \
-e PASSWORD="example-s3r3tt!" \
-e BASE_URL="https://example-paiigeee.mykita.com" \
-e GROUP_ID="99" \
-e DAY_FROM="2022-11-31" \
-e DAY_TO="2022-12-31" \
-v /home/path/where/i/want/pics/to/be:/data:Z \
ghcr.io/zbigniewzabost/verbose-journey
```

### Podman

```shell
# First, ensure the data directory exists and has proper permissions
mkdir -p /home/path/where/i/want/pics/to/be
chmod 777 /home/path/where/i/want/pics/to/be

# Then run the container
podman run --rm -t --name verbose-journey \
-e EMAIL="example-my_paiiigeeee_login@email.com" \
-e PASSWORD="example-s3r3tt!" \
-e BASE_URL="https://example-paiigeee.mykita.com" \
-e GROUP_ID="99" \
-e DAY_FROM="2022-11-31" \
-e DAY_TO="2022-12-31" \
-v /home/path/where/i/want/pics/to/be:/data:Z \
ghcr.io/zbigniewzabost/verbose-journey
```

### Parameters

- `EMAIL` and `PASSWORD` are credentials you use to log in to kita page
- `BASE_URL` is kita page base url
- `GROUP_ID` is the group id of your kid
- `DAY_FROM` and `DAY_TO` is the timespan to use, both parameters are optional and inclusive. If not provided `DAY_TO` will be set to current date and `DAY_FROM` to current day minus 7 days
- `/home/path/where/i/want/pics/to/be` - replace it with real path on your local machine where pictures should be saved

### Troubleshooting

If you encounter permission issues when the container tries to write to the data directory, you may need to adjust the permissions:

```shell
# Set appropriate permissions on the data directory
mkdir -p /path/to/data/directory
chmod 777 /path/to/data/directory
```

When using the devbox scripts, this is handled automatically.

Container images are produced with GitHub actions, see packages page.
